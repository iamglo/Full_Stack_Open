{"version":3,"sources":["services/phone.js","index.js"],"names":["url","getPersons","axios","get","then","response","data","person","post","id","newUrl","delete","reponse","obj","put","Name","name","number","setPersons","setMessage","onClick","window","confirm","phoneService","p","setTimeout","catch","error","Filter","setFilter","onChange","event","target","value","toLowerCase","PersonForm","persons","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","filt","filter","length","updated","map","concat","type","Numbers","includes","part","key","Notification","message","className","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b5401cc.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst url = '/api/persons'\r\n\r\nconst getPersons = () => {\r\n    const request = axios.get(url)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst setPersons = person => {\r\n    const request = axios.post(url, person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const newUrl = url + \"/\" + id\r\n    const request = axios.delete(newUrl)\r\n    return request.then(reponse => getPersons()) \r\n}\r\n\r\nconst updatePerson = (id, obj) => {\r\n    const newUrl = url + \"/\" + id\r\n    const request = axios.put(newUrl, obj)\r\n    return request.then(response => response.data)\r\n}\r\nexport default {getPersons, setPersons, deletePerson, updatePerson}","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport nextId from \"react-id-generator\";\nimport phoneService from './services/phone'\nimport './index.css'\n\nconst Name = ({id, name, number, setPersons, setMessage}) => {\n  const deleteName = () => {\n    if (window.confirm(`Delete ${name}?`)){\n      phoneService\n      .deletePerson(id)\n      .then(p => {\n        setPersons(p)\n        setMessage(`${name} was successfully deleted`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n      })\n      .catch(error => {\n        setMessage(error.response.data)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n      })\n    }\n  }\n  return(<div>{name} {number} <button onClick={deleteName}> Delete </button></div>)\n}\n\nconst Filter = ({setFilter}) => {\n  const filterDisplay = (event) => {\n    setFilter(event.target.value.toLowerCase())\n  }\n  return(<div> filter shown with <input onChange={filterDisplay}/> </div>)\n}\n\nconst PersonForm = ({persons, setPersons, setMessage}) => {\n  // var htmlId = nextId();\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n\n  const addNumber = (event) => {\n    event.preventDefault()\n\n    const filt = persons.filter(p => p.name === newName)\n    if (filt.length === 1){\n      const updated = filt[0]\n      if (window.confirm(`${newName} is already in the list. Replace the old one with the new one?`)){\n        phoneService\n        .updatePerson(updated.id, {name : updated.name, id: updated.id, number: newNumber}).then(response => {\n          setPersons(persons.map(p => p.id !== updated.id ? p : response))\n          setMessage(`${updated.name} was successfully updated`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setMessage(error.response.data)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n      }\n    }\n\n    else{\n      phoneService\n        .setPersons({name : newName, number: newNumber})\n        .then(p => {\n          setPersons(persons.concat(p))\n          setMessage(`${newName} was successfully added`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return(<div>\n    <form onSubmit={addNumber}>\n        <div>\n          name: <input name = \"name\" value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input name=\"number\" value={newNumber} onChange = {handleNumChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n        \n    </form>\n     <div>debug: {newName} {newNumber}</div>\n  </div>)\n}\n\nconst Numbers = ({persons, filt, setPersons, setMessage}) => {\n  return (<div>\n    {persons.filter(p => p.name.toLowerCase().includes(filt))\n              .map(part => <Name key={part.id} id={part.id} name={part.name} \n              number={part.number} setPersons={setPersons}\n              setMessage={setMessage}></Name>)}\n  </div>)\n}\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"update\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ filter, setFilter] = useState('')\n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n    phoneService\n    .getPersons()\n    .then(response => {\n      setPersons(response)\n    })\n  }, [])\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}> </Notification>\n      \n      <Filter setFilter={setFilter}></Filter>\n\n      <br></br>\n      <br></br>\n\n      <PersonForm persons={persons} setPersons={setPersons} setMessage={setMessage}></PersonForm>\n\n      <h2>Numbers</h2>\n\n      <Numbers persons = {persons} filt={filter} setPersons={setPersons} setMessage={setMessage}></Numbers>\n    </div>\n  )\n}\n \n\nReactDOM.render(<App/>, document.getElementById('root'))\nexport default App\n"],"sourceRoot":""}